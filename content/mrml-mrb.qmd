---
title: "MRML & MRB Basic"
---

**MRML (Medical Reality Modeling Language)** is a data format and framework used primarily in medical imaging software for representing and handling complex data associated with medical image analysis and visualization. MRML was developed as part of the 3D Slicer platform, an open-source software tool used for medical image processing, visualization, and analysis.

![A Scene in 3D Slicer](./../img/mrb-file-slicer.png){#fig-mrb-file-slicer width="100%"}


## Overview of MRML

- **Full Name**: Medical Reality Modeling Language.
- **Purpose**: MRML is used to manage and represent the structure and relationships of medical images, models, and other medical data, making it easier to perform and track complex image analysis operations.
- **Use Case**: Primarily used in **3D Slicer**, but it can be adapted to other medical image analysis frameworks.

### Key Features of MRML

1. **Data Organization**:
   - MRML is designed to organize medical imaging data, such as DICOM files, 3D models, segmentations, volumes, and other derived data in a hierarchical structure.
   - It provides a unified way to manage different data types and their relationships.

2. **Scene Representation**:
   - An MRML file often represents a **scene** in a medical imaging analysis pipeline. This scene includes all relevant datasets (e.g., volumes, fiducials, segmentations) and their properties (e.g., display settings, transformations).

3. **XML-based Format**:
   - MRML uses an **XML-based** file format. This allows for easy reading, writing, and parsing of the data structure using standard XML libraries.
   - The XML format makes it easy to save, share, and load complex medical imaging scenes.

4. **Node-based Structure**:
   - MRML organizes data into **nodes** (e.g., volume nodes, transform nodes, model nodes), each representing a different type of data or operation.
   - Each node can have multiple attributes and references to other nodes, making it easy to create complex relationships between different datasets.

5. **Support for Multiple Data Types**:
   - MRML can represent various data types, including images (CT, MRI), surface models (e.g., 3D reconstructions), transformations (linear and non-linear), and even annotations (e.g., fiducials or landmarks).

6. **Integration with 3D Slicer**:
   - MRML is the core data format used by 3D Slicer for storing and managing data in a medical imaging analysis workflow.
   - It allows users to save and load entire scenes (including images, models, and transformations) in a single file.

### Example of MRML Structure

An MRML file typically contains a set of nodes, each defined with attributes and child elements. Here’s an example of a simple MRML snippet:

```xml
<?xml version="1.0" encoding="UTF-8"?>
<MRML version="1.0">
  <Scene>
    <!-- Volume Node -->
    <Volume id="vtkMRMLScalarVolumeNode1" name="CT_Scan">
      <ImageData file="CT_Scan.nrrd"/>
    </Volume>

    <!-- Model Node -->
    <Model id="vtkMRMLModelNode1" name="Brain_Model">
      <FileName file="brain_model.vtk"/>
      <Display visibility="true" color="1.0 0.0 0.0" opacity="0.8"/>
    </Model>

    <!-- Transform Node -->
    <Transform id="vtkMRMLLinearTransformNode1" name="Transform1">
      <Matrix>
        <Element row="0" col="0">1.0</Element>
        <Element row="0" col="1">0.0</Element>
        <Element row="0" col="2">0.0</Element>
        <Element row="0" col="3">10.0</Element> <!-- Translation in x -->
        <Element row="1" col="0">0.0</Element>
        <Element row="1" col="1">1.0</Element>
        <Element row="1" col="2">0.0</Element>
        <Element row="1" col="3">0.0</Element>
        <Element row="2" col="0">0.0</Element>
        <Element row="2" col="1">0.0</Element>
        <Element row="2" col="2">1.0</Element>
        <Element row="2" col="3">0.0</Element>
        <Element row="3" col="0">0.0</Element>
        <Element row="3" col="1">0.0</Element>
        <Element row="3" col="2">0.0</Element>
        <Element row="3" col="3">1.0</Element>
      </Matrix>
    </Transform>
  </Scene>
</MRML>
```

### Example Explanation:

1. **Volume Node**:
   - Represents a volume dataset (e.g., a CT scan).
   - The `ImageData` element points to a file (e.g., `.nrrd` format).

2. **Model Node**:
   - Represents a 3D model, such as a surface reconstruction of the brain.
   - Contains attributes like visibility, color, and opacity.

3. **Transform Node**:
   - Represents a linear transformation, which could be a translation, rotation, or scaling.
   - The transformation is stored as a 4x4 matrix.

### Applications of MRML

- **Medical Image Visualization**: MRML facilitates visualization of multiple datasets (e.g., CT + segmentation + 3D models) in a unified scene.
- **Medical Image Analysis**: The node-based structure allows for complex image analysis pipelines, integrating multiple data sources and transformations.
- **Data Interchange**: Since MRML is XML-based, it can be used for sharing and exchanging complex medical imaging scenes between researchers and clinicians.

### MRML in 3D Slicer

- In **3D Slicer**, MRML is used to manage the data in a Slicer session. The software’s user interface interacts directly with MRML nodes, allowing users to manipulate the data, perform analysis, and visualize results.
- When a user saves a scene in 3D Slicer, an MRML file is created. This file stores the layout, display properties, transformations, and references to all datasets in the scene.

### Pros & Cons

**Advantages of MRML:**

- **Flexibility**: Can handle diverse types of medical data and complex relationships.
- **Interoperability**: XML-based format allows easy integration with other systems.
- **Visualization and Analysis**: Supports advanced medical image visualization and analysis in tools like 3D Slicer.

**Limitations of MRML:**

- **Software Dependency**: Heavily tied to 3D Slicer, which may limit its adoption outside of the 3D Slicer ecosystem.
- **Complexity**: The flexibility and expressiveness of MRML can make it complex to parse and manipulate programmatically.

### Conclusion

MRML is a powerful data format and framework for organizing, visualizing, and analyzing complex medical imaging data. It is central to the functionality of 3D Slicer and is designed to support advanced image processing workflows by handling multiple data types and relationships in a single, cohesive scene.


## MRB file

An **MRB (Medical Reality Bundle)** file is a compressed archive format used to save and share entire scenes from the **3D Slicer** software platform. It is designed to encapsulate not only the data but also the configuration of the scene, making it easy to share complex medical imaging workflows and visualizations.


### Overview of MRB File

- **Full Name**: Medical Reality Bundle
- **Purpose**: Encapsulates an entire scene from 3D Slicer, including images, models, segmentations, transformations, and annotations.
- **Use Case**: Used for saving, sharing, and exchanging complex medical imaging projects across different users or systems. Ideal for collaborative work or for archiving entire projects.
- **File Extension**: `.mrb`

### Structure of an MRB File

An MRB file is essentially a **compressed ZIP archive** that contains the following components:

1. **MRML File**:
   - The `.mrml` file represents the scene in 3D Slicer. It contains references to all the datasets, models, transformations, and display properties within the scene.
   - This file stores all the metadata about the scene, such as display configurations, transformations, and layout.

2. **Data Files**:
   - The MRB archive contains all the data files referenced in the MRML file, such as:
     - **Volume data** (e.g., `.nrrd`, `.nii` for images like CT or MRI scans)
     - **Surface models** (e.g., `.vtk` or `.stl` files for 3D models)
     - **Transformations** (e.g., `.tfm` files for affine or non-linear transformations)
     - **Fiducial markers** (e.g., `.fcsv` files for landmarks and annotations)

3. **Scene Directory Structure**:
   - The MRB file unzips into a directory structure that contains the MRML file and corresponding data directories.
   - This structure makes it easier to locate and manage individual data components when working outside of the compressed archive.

### Example Structure of an MRB File

When extracted, the MRB file might look like this:

```
MyScene.mrb (Compressed file)
 ├── Scene.mrml                # MRML file that defines the scene layout and configurations
 ├── Data                       # Directory for associated data files
 │    ├── Volume1.nrrd          # Volume data for the scene (e.g., CT or MRI scan)
 │    ├── Model1.vtk            # Surface model file for 3D rendering
 │    ├── Transform1.tfm        # Transformation matrix for alignment
 │    ├── Landmark1.fcsv        # Fiducial markers or annotations
 └── SceneDescription.txt       # Optional description of the scene
```

### How to Create and Use an MRB File

1. **Creating an MRB File in 3D Slicer**:
   - After setting up your scene in 3D Slicer (importing datasets, applying transformations, segmentations, etc.), you can save the entire scene as an MRB file.
   - Go to `File` -> `Save Scene...`.
   - Select the "Medical Reality Bundle (*.mrb)" option and specify the destination.

2. **Opening an MRB File in 3D Slicer**:
   - To open an MRB file, simply use `File` -> `Load Scene...` and choose the `.mrb` file.
   - 3D Slicer will automatically extract and load all the data and configuration into the current session, allowing you to continue working on the same scene setup.

### Benefits of Using MRB Files

1. **Portability**: The MRB file format allows you to bundle all relevant data and scene configurations into a single file, making it easy to transfer between systems or users without worrying about missing files.

2. **Reproducibility**: Sharing the entire scene, including transformations, display properties, and annotations, helps ensure that others can replicate your setup exactly as intended.

3. **Collaboration**: Facilitates collaborative projects by allowing teams to share comprehensive 3D Slicer scenes.

4. **Archiving**: Ideal for archiving projects, since it saves all scene-related data and settings in one place.

### Example Use Case

Imagine a radiologist working on a complex case that involves a combination of CT and MRI data, along with 3D models of the anatomy and specific annotations or fiducials for surgery planning. The radiologist can save the entire scene as an MRB file and send it to a colleague for review. The colleague can open the MRB file in 3D Slicer and see the exact same scene, with all the configurations and data intact.

### Technical Details

- **MRB files** are essentially ZIP archives with a `.mrb` extension.
- Inside the archive, the scene is represented by an MRML file (`Scene.mrml`) along with the associated data files.

### Limitations of MRB Files

1. **File Size**: Depending on the size and complexity of the scene, MRB files can become large, making them challenging to share over limited bandwidth connections.
2. **Software Dependency**: MRB files are specifically designed for 3D Slicer, which limits their use outside of this software platform.

### Conclusion

The **MRB (Medical Reality Bundle)** file format is a powerful way to encapsulate entire 3D Slicer scenes for easy sharing, archiving, and reproducibility. It helps maintain the integrity of complex medical imaging setups, making it an ideal tool for collaborative projects and research in the medical imaging community.

Let me know if you need more details on creating or using MRB files, or any specific features related to 3D Slicer!